name: release

on:
  push:
    tags:
    # Runs on any new tag including release candidates (rc)
    # Semantic versioning:  vX.Y.Z{-rcN}    e.g. v1.2.3-rc1
    - 'v*'
  
env:
  DOCKER_REPOSITORY: osmolabs/osmosis
  CURRENT_TAG: ${{ github.ref_name }} # ref_name = the branch or tag name that triggered the workflow run.
  GENESIS_URL: https://github.com/osmosis-labs/networks/raw/main/osmosis-1/genesis.json
  SNAPSHOT_URL: https://osmosis-snapshot.sfo3.cdn.digitaloceanspaces.com/osmosis.json
  # ADDRBOOK_URL: https://quicksync.io/addrbook.osmosis.json
  ADDRBOOK_URL: https://snapshots1.polkachu.com/addrbook/osmosis/addrbook.json
  # RPC_ENDPOINT: https://rpc.osmosis.zone
  RPC_ENDPOINT: https://osmosis-rpc.polkachu.com
 
jobs:

  create_artifacts:
    runs-on: ubuntu-20.04
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v3
        with:                                        # remove this when merging into main repo
          repository: osmosis-labs/osmosis           # ""
          ref: v10.0.0                               # ""
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # - 
      #   name: Launch release process
      #   # switch commented line below when done
      #   run: |
      #     # make -f contrib/images/osmobuilder/Makefile release
      - 
        name: (stub) Launch release process 
        run: |
          mkdir release
          wget -q -P release/ https://github.com/osmosis-labs/osmosis/releases/download/v10.0.0/osmosisd-10.0.0-linux-amd64
      - 
        name: Upload release folder
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: release

  minor_release:
    runs-on: ubuntu-20.04
    needs: [create_artifacts]
    # Runs this workflow only on a minor release
    # A new major release would follow the pattern vX.0.0{-rcN}
    if: ${{ github.ref != 'v*.0.0*' }}
    steps:
      - 
        name: Install necessary dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends aria2 lz4
          curl -sSLf "$(curl -sSLf https://api.github.com/repos/tomwright/dasel/releases/latest | grep browser_download_url | grep linux_amd64 | grep -v .gz | cut -d\" -f 4)" -L -o dasel && chmod +x dasel
          sudo mv ./dasel /usr/local/bin/dasel
      -
        name: Download artifacts from previous job
        uses: actions/download-artifact@v3
        with:
          name: release
          path: release
      - 
        name: Copy osmosisd binary to PATH and check version
        run: |
          sudo cp osmosisd-*-linux-amd64 /usr/local/bin/osmosisd
          sudo chmod +x /usr/local/bin/osmosisd
          osmosisd version
        working-directory: release
      - 
        name: Initialize Osmosis Node
        run:  osmosisd init osmo-github-runner --home $HOME/.osmosisd/ --chain-id=osmosis-1
      - 
        name: Download genesis
        run:  wget -q -O $HOME/.osmosisd/config/genesis.json ${{ env.GENESIS_URL }}
      - 
        name: Download address book
        run:  wget -q -O $HOME/.osmosisd/config/addrbook.json ${{ env.ADDRBOOK_URL }}
      # - 
      #   name: Download snapshot
      #   run:  |
      #     SNAPSHOT_URL=$(curl -s https://osmosis-snapshot.sfo3.cdn.digitaloceanspaces.com/osmosis.json  | jq -r '.[0].url')
      #     wget -q -O - $SNAPSHOT_URL | lz4 -d | tar -C $HOME/.osmosisd/ -xf - 
      - 
        name: Configure Osmosis Node
        run:  |
          CONFIG_FOLDER=$HOME/.osmosisd/config

          # Get last block height
          LAST_BLOCK_HEIGHT=$(curl -s ${{ env.RPC_ENDPOINT }}/commit | dasel --plain -r json '.result.signed_header.header.height')
          LAST_BLOCK_HASH=$(curl -s ${{ env.RPC_ENDPOINT }}/commit | dasel --plain -r json '.result.signed_header.commit.block_id.hash')

          # Calculate height I should halt
          DELTA_HALT_HEIGHT=20
          HALT_HEIGHT=$(($LAST_BLOCK_HEIGHT + $DELTA_HALT_HEIGHT))

          # Calculate height I should start
          TRUST_HEIGHT=$LAST_BLOCK_HEIGHT
          TRUST_HASH=$LAST_BLOCK_HASH

          RPC_SERVERS="osmosis-rpc.polkachu.com,osmosis.artifact-staking.io:26657"

          echo "Last block height: $LAST_BLOCK_HEIGHT"
          echo "Halt height: $HALT_HEIGHT"
          echo "Trust height: $TRUST_HEIGHT"

          # Edit config.toml
          dasel put string -f $CONFIG_FOLDER/config.toml '.statesync.enable'       'true'
          dasel put string -f $CONFIG_FOLDER/config.toml '.statesync.trust_height' $TRUST_HEIGHT
          dasel put string -f $CONFIG_FOLDER/config.toml '.statesync.trust_hash'   $TRUST_HASH
          dasel put string -f $CONFIG_FOLDER/config.toml '.statesync.rpc_servers'  $RPC_SERVERS

          # Edit app.toml
          dasel put string -f $CONFIG_FOLDER/app.toml '.halt-height' $HALT_HEIGHT
      
      - 
        name: Start Osmosis Node
        run: osmosisd start --moniker osmo-github-runner --home $HOME/.osmosisd/ 
      - 
        name: Finish
        run: |
          ls $HOME/.osmosisd/
          ls $HOME/.osmosisd/data


  major_release:
    runs-on: ubuntu-20.04
    needs: [create_artifacts]
    # Runs this workflow only on a major release
    # A new major release would follow the pattern vX.0.0{-rcN}
    if: ${{ github.ref == 'v*.0.0*' }}
    steps:
      - 
          name: major
          run:  echo Major release workflow ${{ github.ref_name }}
  
  create_release:
    runs-on: ubuntu-20.04
    needs: [major_release, minor_release]
    # Runs this workflow in any release
    steps:
      - 
          name: Create draft release
          run:  echo "Creating draft release"
  
  post_release:
    runs-on: ubuntu-20.04
    needs: [create_release]
    # Runs this workflow in any release
    steps:
      - 
          name: Update tools
          run:  echo "Updating tools"
  